name: "publish"
on: workflow_dispatch

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-11
          - windows-2022

    runs-on: ${{ matrix.os }}
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      # For sloth256-189 Wasm support we need `llvm-ar`, which is not available by default
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-22
          override: true

        # Workaround to resolve link error with C:\msys64\mingw64\bin\libclang.dll
      - name: Remove msys64
        run: Remove-Item -LiteralPath "C:\msys64\" -Force -Recurse
        if: runner.os == 'Windows'

      - name: install webkit2gtk (ubuntu only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libwebkit2gtk-4.0-dev libappindicator3-dev

      # Imports PFX Certificate into keystore, allows Tauri to then sign the exe without being passed the private key.
      - name: import windows certificate
        if: runner.os == 'Windows'
        env:
          WINDOWS_PFX: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}
          WINDOWS_PFX_PASSWORD: ${{ secrets.CERTIFICATE_WINDOWS_PASSWORD }}
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate/tempCert.txt -Value $env:WINDOWS_PFX
          certutil -decode certificate/tempCert.txt certificate/certificate.pfx
          Remove-Item â€“path certificate -include tempCert.txt
          Import-PfxCertificate -FilePath certificate/certificate.pfx -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String $env:WINDOWS_PFX_PASSWORD -Force -AsPlainText)

      - name: install app dependencies and build it
        # sometimes it fails downloading packages, so set a timeout https://github.com/yarnpkg/yarn/issues/4890
        run: yarn install --network-timeout 1000000 && yarn build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: tauri run
        uses: tauri-apps/tauri-action@v0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.MACOS_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.MACOS_IDENTITY_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: __VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: true
